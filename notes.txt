


- [OK] veldjes invullen / node selecteren en description invullen
- [ON] printen to image/pdf
- [OK] betere icons / hover state
- [OK] desc invullen van pijl lukt niet
- [OK] nieuwe nodes: checken als er al 1 staat op die xy coordinaat
- [OK] zoom knoppen
- [OK] scroll bars
- [OK] delete toets met warning
- [OK] align new nodes with centers
- [OK] import/json maken van xcs procedure (bvb "Boom kappen")
- [OK] autosize
- [OK] remove points after auto arrange
- [OK] knop om naar afspeelomgeving te gaan
- [OK] savejson werkt nu niet meer ?
- [OK] breadcrumb en navigatie daarin van de player
- [OK] validatie (geen beginpunt + endless loop)
- [OK] groups/kadertjes

- [BUSY] rework manager and js model

- [TODO] paste json / load json file
- [TODO] bug met single entry point check
- [TODO] loop error herbekijken
- [TODO] scrollbars herbekijken































    //Helper
    graph.convertValueToString = function (cell) {
        if (mxUtils.isNode(cell.value)) {
            if (cell.value.nodeName.toLowerCase() == 'person') {
                var firstName = cell.getAttribute('firstName', '');
                var lastName = cell.getAttribute('lastName', '');

                if (lastName != null && lastName.length > 0) {
                    return lastName + ', ' + firstName;
                }

                return firstName;
            }
            else if (cell.value.nodeName.toLowerCase() == 'knows') {
                return cell.value.nodeName + ' (Since '
                    + cell.getAttribute('since', '') + ')';
            }

        }

        return '';
    };




















/*function deleteSubtree(graph, cell) {
        var cells = [];
        graph.traverse(cell, true, function (vertex) {
            cells.push(vertex);
            return true;
        });

        if (confirm('Dit item en eventueel onderliggende items worden verwijderd.\nWeet je het zeker?'))
            graph.removeCells(cells);
    }*/





























    //Code to add cells

    try {
        model.beginUpdate();
        var parent = graph.getDefaultParent();
        var defaultSize = { w: 140, h: 80 };
        var v1 = graph.insertVertex(parent, null, 'Gebeurt de doorzoeking op heterdaad?', 40, 40, defaultSize.w, defaultSize.h);
        var v2 = graph.insertVertex(parent, null, 'Geeft de eigenaar toestemming?', 320, 200, defaultSize.w, defaultSize.h);
        var v3 = graph.insertVertex(parent, null, 'Je moet niks doen.', 40, 360, defaultSize.w, defaultSize.h);
        addOverlays(graph, v1);
        addOverlays(graph, v2);
        addOverlays(graph, v3);
        graph.insertEdge(parent, null, 'Ja', v1, v2);
        graph.insertEdge(parent, null, 'Neen', v1, v3);
    }
    finally {
        model.endUpdate();
    }